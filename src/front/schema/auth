// validations/admin/auth.validation.js
const Joi = require('joi');
const validationRequest = require("../../../middlewares/validationRequest");

module.exports = {
  // LOGIN Validation
  loginValidation: async (req, res, next) => {
    const schema = Joi.object({
      email: Joi.string().email().required(),
      password: Joi.string().min(6).required()
    });
    validationRequest(req, res, next, schema);
  },

  // SIGNUP Validation
  signupValidation: async (req, res, next) => {
    const schema = Joi.object({
      first_name: Joi.string().required(),
      last_name: Joi.string().required(),
      email: Joi.string().email().required(),
      password: Joi.string().min(6).required(),
      confirm_password: Joi.any().equal(Joi.ref('password')).required().messages({
        'any.only': 'Passwords do not match'
      })
    });
    validationRequest(req, res, next, schema);
  },

  // FORGOT PASSWORD Validation
  forgotPasswordValidation: async (req, res, next) => {
    const schema = Joi.object({
      email: Joi.string().email().required()
    });
    validationRequest(req, res, next, schema);
  },

  // VERIFY OTP Validation (for signup or forgot password)
  verifyOtpValidation: async (req, res, next) => {
    const schema = Joi.object({
      email: Joi.string().email().required(),
      otp: Joi.number().required()
    });
    validationRequest(req, res, next, schema);
  },

  // RESET PASSWORD Validation
  resetPasswordValidation: async (req, res, next) => {
    const schema = Joi.object({
      email: Joi.string().email().required(),
      otp: Joi.number().required(),
      password: Joi.string().min(6).required(),
      confirm_password: Joi.any().equal(Joi.ref('password')).required().messages({
        'any.only': 'Passwords do not match'
      })
    });
    validationRequest(req, res, next, schema);
  }
};